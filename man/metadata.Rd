% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/meta_data.R
\name{metadata}
\alias{metadata}
\alias{qcs_dataset_names}
\alias{qcs_fake_dataset}
\alias{qcs_dataset_column_names}
\alias{assert_is_qcs_dataset_name}
\alias{assert_is_qcs_dataset}
\title{JRC-ENCR QCS Metadata}
\usage{
qcs_dataset_names()

qcs_fake_dataset(dataset_name, assertion_type = "input")

qcs_dataset_column_names(dataset_name, assertion_type = "input")

assert_is_qcs_dataset_name(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "input"
)

assert_is_qcs_dataset(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "input",
  dataset_name
)
}
\arguments{
\item{dataset_name}{\verb{[character]} (no default)

one of the following:
\itemize{
\item "incidence"
\item "mortality"
\item "population"
\item "lifetable"
}}

\item{assertion_type}{See e.g. \verb{[dbc::report_to_assertion]}.}

\item{x}{Assertion is performed on this object.}

\item{x_nm}{See e.g. \verb{[dbc::dbc::assert_is_integer]}.}

\item{call}{See e.g. \verb{[dbc::dbc::assert_is_integer]}.}
}
\description{
Tools to access metadata such as dataset names and column names of a dataset.
}
\details{
\verb{[ecnrqcs::qcs_dataset_names]} returns the set of allowed dataset names
as a character string vector.

\verb{[ecnrqcs::qcs_fake_dataset]} returns a \code{data.frame} with one row which
has the required columns in their required format for the given
\code{dataset_name}. Column names and classes taken from JRC-ENCR User
Compendium 2.0.

\verb{[ecnrqcs::qcs_dataset_column_names]} returns a character string vector
of column names for the given \code{dataset_name}. This function wraps
\verb{[ecnrqcs::qcs_fake_dataset]}.
}
